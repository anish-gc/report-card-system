# Generated by Django 5.2.5 on 2025-08-08 05:43

import django.core.validators
import django.db.models.deletion
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(db_index=True, default=True, help_text='Status to check if the entity is active')),
                ('name', models.CharField(db_index=True, help_text='Full name of the student', max_length=100)),
                ('email', models.EmailField(db_index=True, help_text='Unique email address', max_length=254, unique=True)),
                ('date_of_birth', models.DateField(help_text="Student's date of birth")),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Student',
                'verbose_name_plural': 'Students',
                'db_table': 'students',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ReportCard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(db_index=True, default=True, help_text='Status to check if the entity is active')),
                ('term', models.CharField(choices=[('Term 1', 'Term 1'), ('Term 2', 'Term 2'), ('Term 3', 'Term 3'), ('Final', 'Final Term')], db_index=True, help_text='Academic term (e.g., Term 1, Term 2)', max_length=10)),
                ('year', models.PositiveIntegerField(db_index=True, help_text='Academic year', validators=[django.core.validators.MinValueValidator(2000), django.core.validators.MaxValueValidator(2100)])),
                ('total_subjects', models.PositiveIntegerField(default=0, help_text='Total number of subjects')),
                ('average_score', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Average score across all subjects', max_digits=5)),
                ('total_score', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Total score across all subjects', max_digits=8)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
                ('student', models.ForeignKey(help_text='Student this report card belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='report_cards', to='students.student')),
            ],
            options={
                'verbose_name': 'Report Card',
                'verbose_name_plural': 'Report Cards',
                'db_table': 'report_cards',
                'ordering': ['-year', '-term', 'student__name'],
            },
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(db_index=True, default=True, help_text='Status to check if the entity is active')),
                ('name', models.CharField(db_index=True, help_text='Subject name', max_length=100)),
                ('code', models.CharField(db_index=True, help_text='Unique subject code (e.g., MATH101, ENG201)', max_length=10, unique=True, validators=[django.core.validators.RegexValidator(message='Subject code must be in format: 2-4 letters followed by 2-4 numbers (e.g., MATH101)', regex='^[A-Z]{2,4}[0-9]{2,4}$')])),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Subject',
                'verbose_name_plural': 'Subjects',
                'db_table': 'subjects',
                'ordering': ['code'],
            },
        ),
        migrations.CreateModel(
            name='Mark',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(db_index=True, default=True, help_text='Status to check if the entity is active')),
                ('score', models.DecimalField(decimal_places=2, help_text='Score out of 100', max_digits=5, validators=[django.core.validators.MinValueValidator(Decimal('0.00')), django.core.validators.MaxValueValidator(Decimal('100.00'))])),
                ('remarks', models.TextField(blank=True, help_text="Teacher's remarks for this subject")),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
                ('report_card', models.ForeignKey(help_text='Report card this mark belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='marks', to='students.reportcard')),
                ('subject', models.ForeignKey(help_text='Subject for this mark', on_delete=django.db.models.deletion.CASCADE, related_name='marks', to='students.subject')),
            ],
            options={
                'verbose_name': 'Mark',
                'verbose_name_plural': 'Marks',
                'db_table': 'marks',
                'ordering': ['report_card', 'subject__code'],
            },
        ),
        migrations.AddIndex(
            model_name='student',
            index=models.Index(fields=['name', 'is_active'], name='students_name_3ddfc3_idx'),
        ),
        migrations.AddIndex(
            model_name='student',
            index=models.Index(fields=['email', 'is_active'], name='students_email_b5a5fb_idx'),
        ),
        migrations.AddIndex(
            model_name='reportcard',
            index=models.Index(fields=['student', 'year'], name='report_card_student_d91b8c_idx'),
        ),
        migrations.AddIndex(
            model_name='reportcard',
            index=models.Index(fields=['year', 'term'], name='report_card_year_39ca93_idx'),
        ),
        migrations.AddIndex(
            model_name='reportcard',
            index=models.Index(fields=['student', 'year', 'term'], name='report_card_student_c64820_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='reportcard',
            unique_together={('student', 'term', 'year')},
        ),
        migrations.AddIndex(
            model_name='subject',
            index=models.Index(fields=['code', 'is_active'], name='subjects_code_db9915_idx'),
        ),
        migrations.AddIndex(
            model_name='subject',
            index=models.Index(fields=['name', 'is_active'], name='subjects_name_5f731e_idx'),
        ),
        migrations.AddIndex(
            model_name='mark',
            index=models.Index(fields=['report_card', 'subject'], name='marks_report__eebd32_idx'),
        ),
        migrations.AddIndex(
            model_name='mark',
            index=models.Index(fields=['subject', 'score'], name='marks_subject_f88c45_idx'),
        ),
        migrations.AddIndex(
            model_name='mark',
            index=models.Index(fields=['report_card', 'score'], name='marks_report__f2e2fa_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='mark',
            unique_together={('report_card', 'subject')},
        ),
    ]
